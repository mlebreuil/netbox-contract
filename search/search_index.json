{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#contract-plugin","title":"Contract plugin","text":"<p>NetBox plugin to manage contracts.</p> <ul> <li>Free software: MIT</li> <li>Documentation: https://mlebreuil.github.io/netbox-contract/</li> </ul>"},{"location":"#features","title":"Features","text":"<p>The plugin adds contracts and invoices model to NetBox. It allows to link contract with objects. And link invoice templates and invoices with contracts. Invoice lines can be linked to each invoice / invoice template. Accounting dimensions can be linked with invoice lines.  </p>"},{"location":"#compatibility","title":"Compatibility","text":"NetBox Version Plugin Version 4.1 2.2 4.2 2.3 4.3 2.4"},{"location":"#installing","title":"Installing","text":""},{"location":"#activate-venv","title":"Activate venv","text":"<p>To ensure our plugin is accessible to the NetBox installation, we first need to activate the Python virtual environment that was created when we installed NetBox. To do this, determine the virtual environment's path (this will be <code>/opt/netbox/venv/</code> if you use the documentation's defaults) and activate it:</p> <pre><code>$ source /opt/netbox/venv/bin/activate\n</code></pre>"},{"location":"#install-the-package","title":"Install the package","text":"<pre><code>$ python3 -m pip install netbox-contract\n</code></pre>"},{"location":"#configure-netbox","title":"Configure NetBox","text":"<p>Finally, we need to configure NetBox to enable our new plugin. In the NetBox installation directory, open <code>netbox/netbox/configuration.py</code> and locate the <code>PLUGINS</code> parameter; it should be an empty list. (If it's not yet defined, go ahead and create it.) Add the name of our plugin to this list:</p> <pre><code># configuration.py\nPLUGINS = [\n    'netbox_contract',\n]\n</code></pre>"},{"location":"#customize-the-plugin","title":"Customize the plugin","text":"<p>The following configuration items can be set:</p> <pre><code># configuration.py\nPLUGINS_CONFIG = {\n    'netbox_contract': {\n        'top_level_menu': True,\n        'mandatory_contract_fields': [],\n        'hidden_contract_fields': [],\n        'mandatory_invoice_fields': [],\n        'hidden_invoice_fields': [],\n        'mandatory_dimensions': [],\n    }\n}\n</code></pre> <ul> <li>top_level_menu : If \"Contracts\" appears under the \"Plugins\" menu item or on its own</li> <li>default_accounting_dimensions: The accounting dimensions which will appear in the field' background when empty. Note that accounting dimensions are now managed as individual objects. The use of this field is deprecated.  </li> <li>mandatory_contract_fields, mandatory_invoice_fields: Fields which are not required by default and can be set as such. The list of fields is at the bottom of the contract import form.</li> <li>hidden_contract_fields, hidden_invoice_fields: List of fields to be hidden. Fields should not be required to be hidden.</li> </ul>"},{"location":"#customize-the-plugin-fields-choices","title":"Customize the plugin fields choices","text":"<p>Internal party reference the legal entity of your organization that is a party to the contract. The first currency will also be the default currency for contracts.  </p> <pre><code># configuration.py\nFIELD_CHOICES = {\n    'netbox_contract.Contract.internal_party': (\n        ('default', 'Default entity', 'green'),\n        ('entity1', 'Entity 1', 'green'),\n        ('entity2', 'Entity 2', 'yellow'),\n    ),\n    'netbox_contract.Contract.currency': (\n        ('usd', 'USD'),  # 1st position is the default currency\n        ('eur', 'EUR'),\n        ('chf', 'CHF'),\n        ('pln', 'PLN'),\n    ),\n    'netbox_contract.Contract.status': (\n        ('active', 'Active', 'green'),\n        ('canceled', 'Canceled', 'red'),\n    )\n    'netbox_contract.Invoice.status': (\n        ('draft', 'Draft', 'yellow'),\n        ('posted', 'Posted', 'green'),\n        ('canceled', 'Canceled', 'red'),\n    )\n}\n</code></pre>"},{"location":"#run-database-migrations","title":"Run database migrations","text":"<pre><code>(venv) $ cd /opt/netbox/netbox/\n(venv) $ python3 manage.py migrate\n</code></pre>"},{"location":"accounting_dimensions/","title":"Accounting dimensions","text":""},{"location":"accounting_dimensions/#accounting-dimensions","title":"Accounting dimensions","text":"<p>Note</p> <p>account is considered a accounting dimensions as any other.</p> <p>It is possible through the plugin config  attribure 'mandatory_dimensions' to set some mandatory dimensions. the attribute will take a list of dimension names. For instance:</p> <pre><code># configuration.py\nPLUGINS_CONFIG = {\n    'netbox_contract': {\n        'top_level_menu': True,\n        'mandatory_contract_fields': [],\n        'hidden_contract_fields': [],\n        'mandatory_invoice_fields': [],\n        'hidden_invoice_fields': [],\n        'mandatory_dimensions': ['account','project'],\n    }\n}\n</code></pre> <p>Refer to the readme file for more information.</p> <p>Warning</p> <p>Accounting dimensions used to be set with a simple json field. Although the field is still available, it is recommended to add dimensions through invoice lines. You will find in the script folder a file which can be imported as netbox custom scripts module which contains a script to perform the migration. You wil need to adjust the script to your needs.</p> <p></p> <ul> <li>name: The name of the accounting dimensions (Account, Project, Entity ...)</li> <li>value: The value for this dimension.</li> <li>status: If the accounting dimension can still be used for new invoice lines.</li> <li>Comments: Self explanatory</li> </ul>"},{"location":"api/","title":"Api","text":""},{"location":"api/#api","title":"API","text":"<p>note: When creating invoices and invoice lines through the API, the corresponding contracts respectively accounting dimensions, must be referenced as a list of id.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#version-2","title":"Version 2","text":""},{"location":"changelog/#version-241","title":"Version 2.4.1","text":"<ul> <li>257 Add the possibility to filter invoices by accounting dimensions.</li> <li>267 Add status field to invoices.</li> <li>263 Enable contract assignment to virtual circuits.</li> <li>258 Fix assignement of contacts to service providers.</li> <li>261 Fix spelling of word \"party\".</li> </ul>"},{"location":"changelog/#version-240","title":"Version 2.4.0","text":"<p>[!WARNING] This version requires Netbox 4.3.0 or later</p> <ul> <li>253 Implement Netbox 4.3 compatibility</li> </ul>"},{"location":"changelog/#version-233","title":"Version 2.3.3","text":"<ul> <li>250 Add contacts to contract.</li> <li>248 Add contact filtering on service provider.</li> <li>245 Add contract-type model.</li> </ul>"},{"location":"changelog/#version-232","title":"Version 2.3.2","text":"<ul> <li>234 As part of the preparation of the plugin for certification, this version includes standard Netbox unittest for model views. Correction to data import are also present as well.</li> </ul>"},{"location":"changelog/#version-231","title":"Version 2.3.1","text":"<ul> <li>219 Fix - netbox 4.2 non editable field for gfk</li> </ul>"},{"location":"changelog/#version-230","title":"Version 2.3.0","text":"<p>[!WARNING] Accounting dimension json field removed. It is deprecated since v2.2.0. Refer to the documentation</p> <ul> <li>206 remove deprecated json accounting dimention field</li> <li>Add background color to status</li> <li>Script - fix check_contract_end with empty end date</li> <li>minor fix</li> </ul>"},{"location":"changelog/#version-2211","title":"Version 2.2.11","text":"<ul> <li>202 Fix django.template.exceptions when trying to open device detail.</li> </ul>"},{"location":"changelog/#version-2210","title":"Version 2.2.10","text":"<ul> <li>198 Add internationalization support and french translation.</li> <li>196 Add notice field to contract. Add an example custom script to report contract nearing cancelation notice.</li> <li>minor fix and cleanup</li> </ul>"},{"location":"changelog/#version-228","title":"Version 2.2.8","text":"<ul> <li>167 Add selector to object dynamic selection box.</li> <li>193 Set the first currency in the choiceset as default currency.</li> </ul>"},{"location":"changelog/#version-227","title":"Version 2.2.7","text":"<ul> <li>fix migration dependency</li> </ul>"},{"location":"changelog/#version-226","title":"Version 2.2.6","text":"<ul> <li>186 Code compatibility fix for Netbox 4.1</li> </ul>"},{"location":"changelog/#version-225","title":"Version 2.2.5","text":"<ul> <li>Generally improve filtering options</li> <li>178 Add the possibility to filter on invoice number, and contract name through the API.</li> <li>176 Order accounting dimensions in tables alphabetically.</li> <li>171 It is now possible to define madatory accounting dimension by specifying their names in the 'mandatory_dimensions' list in the plugin settings. (see the \"Customize the plugin\" paragraph in the README.md file)</li> </ul>"},{"location":"changelog/#version-224","title":"Version 2.2.4","text":"<ul> <li>166 Review the Contract view to include invoice template details and lines.</li> <li>161 Change the invoice block title if the invoice is a template.</li> <li>160 Add more fields to the invoice and contract bulk edit forms.</li> <li>165 Fix Invoice and invoiceline creation through api. </li> </ul>"},{"location":"changelog/#version-223","title":"Version 2.2.3","text":"<ul> <li>Fix accounting dimensions access through Dynamic Object Fields</li> <li>Fix invoice creation from contract. </li> <li>Add scripts to convert accounting dimensions in the json fields of contract and invoices to invoice template, invoicelines and dimensions objects.</li> </ul>"},{"location":"changelog/#version-222","title":"Version 2.2.2","text":"<ul> <li>154 Fix edit and delete bulk operations on dimensions and invoice lines.</li> <li>153 Enforce uniquness of accounting dimensions.</li> <li>Adds a status ( Active or Inactive ) to accounitng dimensions.</li> <li>151 Fix accounting line and dimensions search.</li> </ul>"},{"location":"changelog/#version-221","title":"Version 2.2.1","text":"<ul> <li>142 Gives the option to enter contract yearly recuring costs instead of only monthly recuring costs. Corresponding value is used to calculate the invoices amount without rounding approximations.</li> <li>148 Update tables format to match the new Netbox UI design.</li> </ul>"},{"location":"changelog/#version-220","title":"Version 2.2.0","text":"<ul> <li>140 Add the \"Invoice line\" and \"Accounting dimension\" models. In order to simplify invoices creation, it is possible to selsct one invoice as the template for each contract; Its accounting lines will automatically be copied to the new invoices for the contract. The amount of the first line will be updated so that the sum of the amount for each invoice line match the invoice amount.</li> </ul>"},{"location":"changelog/#version-212","title":"Version 2.1.2","text":"<ul> <li>127 Fix service provider creation issue</li> <li>Fix contract assignement issue</li> </ul>"},{"location":"changelog/#version-210","title":"Version 2.1.0","text":"<ul> <li>Netbox v4 compatibility. Netbox4.0.2 become a minimum requirement </li> </ul>"},{"location":"changelog/#version-2014","title":"Version 2.0.14","text":"<ul> <li>127 Fix contract filtering</li> <li>Fix contact assignement.</li> </ul>"},{"location":"changelog/#version-2013","title":"Version 2.0.13","text":"<ul> <li>123 prepare plugin to Netbox 4.0 migration.</li> <li>125 Cleanup direct reference to Circuits in the Contract model. Correct database inconsistencies related to the ContractAssignment object renaming.</li> </ul>"},{"location":"changelog/#version-2011","title":"Version 2.0.11","text":"<ul> <li>115 API correction for contract external party</li> <li>117 Tenant and accounting dimensions optional</li> <li>119 Add a Yearly recuring cost, read only, calculated field for contract</li> <li>15 Quick serach limited to active contracts</li> </ul>"},{"location":"changelog/#version-2010","title":"Version 2.0.10","text":"<ul> <li>107 Add the contacts tab to the service provider detail view.</li> <li>111 Correct assignment spelling.</li> </ul>"},{"location":"changelog/#version-209","title":"Version 2.0.9","text":"<ul> <li>42 Allow the selection of either providers or Service providers as contract third party.</li> <li>Removed all reference to the direct assignement of circuits to contracts</li> <li>88 Add a placeholder value to the accounting dimensions jsonfield. This placeholder vale con be configured as part of the PLUGINS_CONFIG parameter in the configuration.py file (see above)</li> <li>89 add the posibility to link contracts to sites and virtual machines.</li> <li>99 list child contracts in on the parent view.</li> </ul>"},{"location":"changelog/#version-208","title":"Version 2.0.8","text":"<ul> <li>#91 Replace deprecated ( in netbox version 3.6) MultipleChoiceField.  </li> <li>48 Allow other plugin to inject visual in contract and invoice forms.  </li> <li>[89] (https://github.com/mlebreuil/netbox-contract/issues/89) Add contract assignement to virtual machines.</li> </ul>"},{"location":"changelog/#version-207","title":"Version 2.0.7","text":"<ul> <li>#85 Fix missing fields contract and invoice import and export forms.</li> </ul>"},{"location":"changelog/#version-206","title":"Version 2.0.6","text":"<ul> <li>#80 Fix missing fields in the API.</li> </ul>"},{"location":"changelog/#version-205","title":"Version 2.0.5","text":"<ul> <li>#75 Fix contract assignement for service providers.</li> <li>#73 Add comment field to contract import form</li> <li>#72 Add fields to the contract assignement bottom tables</li> <li>Remove the 'add' actions from the contract assignment list view</li> </ul>"},{"location":"changelog/#version-204","title":"Version 2.0.4","text":"<ul> <li>Add bulk update capability for contract assignement</li> <li>#63 Correct an API issue on the invoice object.</li> <li>#64 Add hierarchy to contract; New parent field created.</li> <li>#65 Add end date to contact import form.</li> <li>Removed the possibility of add or modify circuits to contracts. The field becomes read only and will be removed in next major release.</li> <li>Make accounting dimensions optional.</li> </ul>"},{"location":"changelog/#version-203","title":"Version 2.0.3","text":"<ul> <li>#60 Update contract quick search to also filter on fields \"External reference\" and \"Comments\".</li> <li>#49 Manage permissions.</li> </ul>"},{"location":"changelog/#version-202","title":"Version 2.0.2","text":"<p>Add support for Netbox 3.5 which become the minimum version supported to accomodate the removal of NetBoxModelCSVForm class (replaced by NetBoxModelImportForm) .</p>"},{"location":"changelog/#version-201","title":"Version 2.0.1","text":"<p>Add support contract assignement panel to devices.</p>"},{"location":"changelog/#version-200","title":"Version 2.0.0","text":"<p>Add a new contract asignement model to allow the assignement of contract not only to Circuits. The support for the direct Contract to Circuit relation will be removed in version 2.1.0 . In Order to migrate existing relations contract_migration.py script is provided and can be run from the django shell.</p>"},{"location":"contract/","title":"Contract","text":""},{"location":"contract/#contract","title":"Contract","text":""},{"location":"contract/#contract-details","title":"Contract details","text":"<ul> <li>External party type: either an Circuit provider or Contract Service provider.</li> <li>Accounting dimensions: Will be copied to each invoice. Although this this field is still available the use invoice templates with accounting dimensions should be prefered.</li> <li>Monthly / Yearly recuring costs: Only one of these two options can be used for each contract. The value will be used, along with the invoice frequency, to calculate each invoice amount.</li> <li>Invoice frequency : The number of month that each invoice covers.</li> <li>Parent: Contrats can be arranged in a parent / child hierarchie.</li> </ul>"},{"location":"contract/#linked-objects","title":"Linked objects:","text":"<ul> <li>Assignments: the assignement of contract to objects is managed from each object's detail view.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome!</p>"},{"location":"contributing/#types-of-contributions","title":"Types of contributions","text":""},{"location":"contributing/#report-bugs-or-submit-feedback","title":"Report bugs or submit feedback","text":"<p>Report bugs and submit feetback here.</p>"},{"location":"contributing/#fix-bugs","title":"Fix bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#coding-conventions","title":"Coding conventions","text":"<p>Netbox Style Guide Django Coding style </p>"},{"location":"contributing/#linting","title":"linting","text":"<p>The ruff linter is used to enforce code style. A pre-commit hook which runs this automatically is included with NetBox. To invoke <code>ruff</code> manually, run:</p> <pre><code>python3 -m pip install ruff\nruff check netbox_contract/\n</code></pre> <p>The pre-commit Python framework is used to simplify the managment of pre-commit hooks. Config is stored in .pre-commit-config.yaml   </p>"},{"location":"contributing/#repository-structure","title":"Repository structure","text":"<p>There are 2 permanent branch in the repository:</p> <ul> <li>master - The current stable release. Individual changes should never be pushed directly to this branch, but rather merged from develop.</li> <li>develop - Active development for the upcoming patch release. Pull requests will typically be based on this branch unless they introduce breaking changes that must be deferred until the next minor release.</li> </ul> <p>For each new feature or bug fix a branch is created from the corresponding issue.</p>"},{"location":"contributing/#setup-your-development-environment","title":"Setup your development environment","text":"<ol> <li> <p>Install Netbox. Make sure taht at the Netbox installtion step you follow the \"Option B: Clone the Git Repository\"</p> </li> <li> <p>From the Netbox directory you activate the NetBox virtual environment </p> <pre><code>$ cd netbox\n$ source venv/netbox/bin/activate\n</code></pre> </li> <li> <p>Fork the netbox-contract repo on GitHub.</p> </li> <li> <p>Clone your fork locally</p> <pre><code>$ cd ..\n$ git clone git@github.com:your_name_here/netbox-contract.git\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment:</p> <pre><code>$ cd  netbox-contract\n$ python3 -m pip install -e .\n</code></pre> </li> <li> <p>install pre-commit:</p> <pre><code>python -m pip install pre-commit\npre-commit install\n</code></pre> </li> <li> <p>Update the Netbox configuration and run the database migrations as mentionned in the plugin installation steps.</p> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Make your changes locally.</p> </li> <li> <p>You can test your changes using the django development server:</p> <pre><code>$ python3 netbox/netbox/manage.py runserver 0.0.0.0:8000 --insecure\n</code></pre> <p>Connect to the name or IP of the server (as defined in ALLOWED_HOSTS) on port 8000; for example, http://127.0.0.1:8000/.</p> </li> <li> <p>Run unittest</p> <pre><code>$ python3 netbox/netbox/manage.py test netbox_contract\n</code></pre> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#model-changes","title":"Model changes","text":"<p>Create the migrations:  </p> <pre><code>source netbox/venv/bin/activate\npython3 netbox/netbox/manage.py makemigrations netbox_contract --dry-run\npython3 netbox/netbox/manage.py makemigrations netbox_contract\n</code></pre> <p>Apply the migrations:  </p> <pre><code>source netbox/venv/bin/activate\npython3 netbox/netbox/manage.py migrate\n</code></pre>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. </li> <li>The pull request should work for Python 3.10 and 3.11. Check Actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the github project go to <code>Releases</code> and create a new release with a new tag.  This will automatically upload the release to pypi:</p>"},{"location":"invoice/","title":"Invoice","text":""},{"location":"invoice/#invoice","title":"Invoice","text":"<p>New invoices shoold be created from the corresponding contract. Most of their fields will be derived from the contract invoice template. An invoice template is an invoice object which \"Template\" field is set to true. There can be only one invoice per contract. Each invoice will be linked to one or more invoice line.</p> <p></p> <ul> <li>Number: The invoice number. Should correspond to your accounting sysstem invoice number.</li> <li>Template: Whether this isvoice is an invoice template for the corresponding contract(s). There can be only one invoice template per contract. The template will be used to define automatically the fields of a nre invoice, including the correpsonding accounting lines with their dimensions.</li> <li>Date: the date of the invoice</li> <li>Contracts: The contracts linked to the invoice.</li> <li>Period_start: The start of the contract periode covered by this invoice.</li> <li>Period_end: The end of the contract period covered by this invoice.</li> <li>currency: The currency of the invoice</li> <li>accounting_dimensions: The use of this field is deprecated. Invoice lines and the corresponding accounting dimensions should be used instead.</li> <li>Amount: The amount of the invoice</li> <li>Documents: A link to the corresponding document. This field is deprecated and the document plugin should be used instead.</li> <li>Comments: self explanatory.</li> </ul> <p>Linked objects:  </p> <p></p>"},{"location":"invoice_line/","title":"Invoice line","text":""},{"location":"invoice_line/#invoice-line","title":"Invoice line","text":"<p>An invoice line correspond to the accouning lines for the invoice. You can define several accounting lines for an invoice but the sum of each line amount should match the invoice amount. this is enforced if you create the invoice line through the web ui.</p> <p></p> <ul> <li>Invoice: The corresponding invoice.</li> <li>Currency: The currency of the invoice</li> <li>Amount: the amount of the invoice. Whether you take into account VAT in this amount depends on the way your budget is contructed.</li> <li>Accounting dimensions: The accounting dimensions for the invoice.</li> <li>Comments: Self explanatory</li> </ul>"}]}