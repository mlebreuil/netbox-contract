name: Lint and tests
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "!release"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install .[dev]
          pip install .[test]
      - name: Run ruff
        run: ruff check
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_USER: netbox
          POSTGRES_PASSWORD: netbox
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout netbox-contract
        uses: actions/checkout@v4
        with:
          path: netbox-contract
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout netbox
        uses: actions/checkout@v4
        with:
          repository: "netbox-community/netbox"
          path: netbox
      - name: Install netbox-contract
        working-directory: netbox-contract
        run: |
          # Include tests directory for test
          sed -i 's/exclude-package-data/#exclude-package-data/g' pyproject.toml
          python -m pip install --upgrade pip
          pip install .
          pip install .[test]
      - name: Install dependencies & configure plugin
        working-directory: netbox
        run: |
          ln -s $(pwd)/../netbox-contract/testing/configuration.py netbox/netbox/configuration.py
          
          python -m pip install --upgrade pip
          pip install -r requirements.txt -U
      - name: Run tests
        working-directory: netbox
        run: |
          python netbox/manage.py test netbox_contract.tests --keepdb